{"version":3,"file":"lit-google-maps-api.js","sourceRoot":"","sources":["lit-google-maps-api.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport {ScriptLoaderMap} from './script-loader-map';\n\nabstract class JsonpLibraryElement extends LitElement {\n\n    public libraryLoaded : boolean = false;\n\n    public libraryErrorMessage : string | null = null;\n\n    abstract get libraryUrl() : string;\n\n    abstract get notifyEvent() : string;\n\n    get callbackName() : string | null {\n        return null;\n    }\n\n    private isReady : boolean = false;\n\n    libraryUrlChanged() {\n        // can't load before ready because notifyEvent might not be set\n        if (this.isReady && this.libraryUrl != null)\n          this.loadLibrary();\n    }\n\n    libraryLoadCallback(error : Error, detail : any) {\n        if (error) {\n            console.warn('Library load failed:', error.message);\n            this.libraryErrorMessage = error.message;\n        } else {\n            this.libraryErrorMessage = null;\n            this.libraryLoaded = true;\n            if (this.notifyEvent != null) {\n                this.dispatchEvent(new CustomEvent(this.notifyEvent, { detail: detail, composed: true}));\n            }\n        }\n    }\n\n    /** loads the library, and fires this.notifyEvent upon completion */\n    loadLibrary() {\n        ScriptLoaderMap.getInstance().require(\n            this.libraryUrl,\n            this.libraryLoadCallback.bind(this),\n            this.callbackName);\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.isReady = true;\n        if (this.libraryUrl != null)\n            this.loadLibrary();\n    }\n}\n\n@customElement('lit-google-maps-api')\nexport class LitGoogleMapsApi extends JsonpLibraryElement {\n\n    @property({type : String, attribute: 'api-key'})\n    apiKey = '';\n\n    @property({type : String, attribute: 'client-id'})\n    clientId = '';\n\n    @property({type : String, attribute: 'maps-url'})\n    mapsUrl = 'https://maps.googleapis.com/maps/api/js?callback=%%callback%%';\n\n    @property({type : String})\n    version = 'weekly';\n\n    @property({type : String})\n    language = '';\n\n    get libraryUrl() : string {\n        return this.computeUrl(this.mapsUrl, this.version, this.apiKey, this.clientId, this.language);\n    }\n\n    get notifyEvent() : string {\n        return 'api-load';\n    }\n\n    computeUrl(mapsUrl : string, version : string, apiKey : string, clientId : string, language : string) : string {\n        var url = mapsUrl + '&v=' + version;\n\n        // Always load all Maps API libraries.\n        url += '&libraries=drawing,geometry,places,visualization';\n\n        if (apiKey && !clientId) {\n            url += '&key=' + apiKey;\n        }\n      \n        if (clientId) {\n            url += '&client=' + clientId;\n        }\n\n        // Log a warning if the user is not using an API Key or Client ID.\n        if (!apiKey && !clientId) {\n            var warning = 'No Google Maps API Key or Client ID specified. ' +\n                'See https://developers.google.com/maps/documentation/javascript/get-api-key ' +\n                'for instructions to get started with a key or client id.';\n            console.warn(warning);\n        }\n\n        if (language) {\n            url += '&language=' + language;\n        }\n\n        return url;\n    }\n}"]}