{"version":3,"file":"wm-modal.js","sourceRoot":"","sources":["wm-modal.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAEnE;;;;;;GAMG;AAGH,IAAa,eAAe,GAA5B,MAAa,eAAgB,SAAQ,UAAU;IAA/C;;QAkC8C,WAAM,GAAG,KAAK,CAAC;QAoB3D,uBAAkB,GAAG,CAAC,CAAa,EAAE,EAAE;YACrC,kCAAkC;YAClC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,OAAO;aACR;YACD,oDAAoD;YACpD,IAAI,CAAC,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;gBAClD,0CAA0C;aAC3C;iBAAM;gBACL,+CAA+C;gBAC/C,iCAAiC;gBACjC,IAAI,CAAC,oBAAoB,EAAE,CAAC;aAC7B;QACH,CAAC,CAAC;IA0BJ,CAAC;IAtDC,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC1D,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAgB,EAAE,EAAE,CACtD,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CACrB,CAAC;IACJ,CAAC;IACD,oBAAoB;QAClB,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC7D,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,CAAC,CAAgB,EAAE,EAAE,CACzD,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CACrB,CAAC;QACF,KAAK,CAAC,oBAAoB,EAAE,CAAC;IAC/B,CAAC;IAiBD,oBAAoB;QAClB,MAAM,OAAO,GAAG;YACd,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACf,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,YAAY,CAAC,CAAgB;QAC3B,4CAA4C;QAC5C,IAAI,CAAC,CAAC,GAAG,KAAK,QAAQ,EAAE;YACtB,sBAAsB;YACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;YACpB,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;SAC5C;IACH,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA,GAAG,IAAI,CAAC,MAAM;YACvB,CAAC,CAAC,IAAI,CAAA;;eAEG;YACT,CAAC,CAAC,EAAE,EAAE,CAAC;IACX,CAAC;CACF,CAAA;AA5FQ,sBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+BlB,CAAC;AAE0C;IAA3C,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;+CAAgB;AAG3D;IADC,KAAK,CAAC,mBAAmB,CAAC;uDACK;AArCrB,eAAe;IAD3B,aAAa,CAAC,UAAU,CAAC;GACb,eAAe,CA6F3B;SA7FY,eAAe","sourcesContent":["import { LitElement, html, css } from \"lit\";\nimport { customElement, property, query } from \"lit/decorators.js\";\n\n/**\n * An example element.\n *\n * @slot - This element has a slot\n * @csspart button - The button\n * \n */\n\n@customElement(\"wm-modal\")\nexport class WebmarketsModal extends LitElement {\n  static styles = css`\n    :host([isopen]) {\n      z-index: 9998;\n      position: fixed;\n      width: 100%;\n      height: 100%;\n      top: 0;\n      left: 0;\n      background: rgba(0, 0, 0, 0.3);\n    }\n    #modal__container {\n      width: 60%;\n      height: 50%;\n      display: flex;\n      z-index: 9999;\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      min-height: 100px;\n      padding: 15px;\n      border-radius: 10px;\n      transform: translate(-50%, -50%);\n      background: #fff;\n      overflow: auto;\n    }\n    @media only screen and (max-width: 905px) {\n      #modal__container {\n        width: 80%;\n        height: 60%;\n      }\n    }\n  `;\n\n  @property({ type: Boolean, reflect: true }) isOpen = false;\n\n  @query('#modal__container')\n  modalContainer!: HTMLDivElement;\n\n  connectedCallback() {\n    super.connectedCallback();\n    window.addEventListener('click', this._handleClickedAway);\n    window.addEventListener(\"keydown\", (e: KeyboardEvent) =>\n      this._keyListener(e)\n    );\n  }\n  disconnectedCallback() {\n    window.removeEventListener('click', this._handleClickedAway);\n    window.removeEventListener(\"keydown\", (e: KeyboardEvent) =>\n      this._keyListener(e)\n    );\n    super.disconnectedCallback();\n  }\n\n  _handleClickedAway = (e: MouseEvent) => {\n    // if the modal is open do nothing\n    if (!this.isOpen) {\n      return;\n    }\n    // if the click is on the modal container do nothing\n    if (e.composedPath().includes(this.modalContainer)) {\n      // console.log('modal container clicked');\n    } else {\n      // if it's not on the tainer dispatch the event\n      // console.log('window clicked');\n      this._dispatchClickedAway();\n    }\n  };\n\n  _dispatchClickedAway() {\n    const options = {\n      bubbles: true,\n      composed: true,\n    };\n    this.dispatchEvent(new CustomEvent('clicked-away', options));\n  }\n\n  _keyListener(e: KeyboardEvent) {\n    // if they press the ESC key start recording\n    if (e.key === \"Escape\") {\n      // e.preventDefault();\n      this.isOpen = false;\n      document.body.toggleAttribute('no-scroll');\n    }\n  }\n\n  render() {\n    return html`${this.isOpen\n      ? html`<div id=\"modal__container\">\n          <slot></slot>\n        </div>`\n      : ''}`;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"wm-modal\": WebmarketsModal;\n  }\n}\n"]}